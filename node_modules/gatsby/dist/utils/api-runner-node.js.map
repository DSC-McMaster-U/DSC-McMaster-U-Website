{"version":3,"sources":["../../src/utils/api-runner-node.js"],"names":["Promise","require","_","chalk","bindActionCreators","tracer","globalTracer","reporter","stackTrace","codeFrameColumns","fs","getCache","createContentDigest","emitter","store","getNodes","getNode","getNodesByType","hasNodeChanged","getNodeAndSavePathDependency","getPublicPath","getNonGatsbyCodeFrameFormatted","trackBuildError","decorateEvent","loadNodeContent","boundPluginActionCreators","doubleBind","boundActionCreators","api","plugin","actionOptions","traceId","deferNodeMutation","defer","actionKey","name","keys","Object","doubleBoundActionCreators","i","length","key","boundActionCreator","args","undefined","initAPICallTracing","parentSpan","startSpan","spanName","spanArgs","defaultSpanArgs","childOf","merge","deferredAction","type","resolve","emit","payload","NODE_MUTATION_ACTIONS","deferActions","actions","deferred","forEach","action","getLocalReporter","activity","panicOnBuild","bind","getUninitializedCache","message","get","Error","set","pluginNodeCache","Map","runAPI","gatsbyNode","spanOptions","pluginSpan","setTag","publicActions","restrictedActionsAvailableInAPI","availableActions","dispatch","config","program","getState","pathPrefix","prefixPaths","publicPath","namespacedCreateNodeId","id","tracing","cache","apiFinished","alreadyDisplayed","createPageAction","createPage","warning","stripIndent","bold","possiblyCodeFrame","push","warn","join","localReporter","runningActivities","Set","localReporterThatCleansUpAfterMisbehavingPlugins","activityTimer","apply","originalStart","start","originalEnd","end","add","delete","createProgress","originalDone","done","endInProgressActivitiesCreatedByThisRun","apiCallArgs","basePath","createNodeId","schema","buildObjectType","buildUnionType","buildInterfaceType","buildInputObjectType","buildEnumType","buildScalarType","pluginOptions","fromCallback","callback","cb","err","val","finish","e","error","pluginName","version","apisRunningById","apisRunningByTraceId","waitingForCasacadeToFinish","module","exports","pluginSource","traceTags","waitForCascadingActions","apiSpanArgs","apiSpan","value","plugins","flattenedPlugins","implementingPlugins","filter","nodeAPIs","includes","apiRunInstance","span","startTime","Date","toJSON","node","internal","contentDigest","filename","page","path","argsJson","JSON","stringify","omit","size","has","currentCount","stopQueuedApiRuns","onAPIRunComplete","actionHandler","on","off","mapSeries","catch","file","parse","find","test","fileName","codeFrame","structuredError","lineNumber","line","columnNumber","column","code","readFileSync","encoding","highlightCode","location","filePath","context","then","results","result","isEmpty","instance","apisByTraceIdCount"],"mappings":"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","sourcesContent":["const Promise = require(`bluebird`)\nconst _ = require(`lodash`)\nconst chalk = require(`chalk`)\nconst { bindActionCreators } = require(`redux`)\n\nconst tracer = require(`opentracing`).globalTracer()\nconst reporter = require(`gatsby-cli/lib/reporter`)\nconst stackTrace = require(`stack-trace`)\nconst { codeFrameColumns } = require(`@babel/code-frame`)\nconst fs = require(`fs-extra`)\nconst { getCache } = require(`./get-cache`)\nimport { createNodeId } from \"./create-node-id\"\nconst { createContentDigest } = require(`gatsby-core-utils`)\nimport {\n  buildObjectType,\n  buildUnionType,\n  buildInterfaceType,\n  buildInputObjectType,\n  buildEnumType,\n  buildScalarType,\n} from \"../schema/types/type-builders\"\nconst { emitter, store } = require(`../redux`)\nconst {\n  getNodes,\n  getNode,\n  getNodesByType,\n  hasNodeChanged,\n  getNodeAndSavePathDependency,\n} = require(`../redux/nodes`)\nconst { getPublicPath } = require(`./get-public-path`)\nconst { getNonGatsbyCodeFrameFormatted } = require(`./stack-trace-utils`)\nconst { trackBuildError, decorateEvent } = require(`gatsby-telemetry`)\nimport errorParser from \"./api-runner-error-parser\"\nconst { loadNodeContent } = require(`../db/nodes`)\n\n// Bind action creators per plugin so we can auto-add\n// metadata to actions they create.\nconst boundPluginActionCreators = {}\nconst doubleBind = (boundActionCreators, api, plugin, actionOptions) => {\n  const { traceId, deferNodeMutation } = actionOptions\n  const defer = deferNodeMutation ? `defer-node-mutation` : ``\n  const actionKey = plugin.name + api + traceId + defer\n  if (boundPluginActionCreators[actionKey]) {\n    return boundPluginActionCreators[actionKey]\n  } else {\n    const keys = Object.keys(boundActionCreators)\n    const doubleBoundActionCreators = {}\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      const boundActionCreator = boundActionCreators[key]\n      if (typeof boundActionCreator === `function`) {\n        doubleBoundActionCreators[key] = (...args) => {\n          // Let action callers override who the plugin is. Shouldn't be\n          // used that often.\n          if (args.length === 1) {\n            return boundActionCreator(args[0], plugin, actionOptions)\n          } else if (args.length === 2) {\n            return boundActionCreator(args[0], args[1], actionOptions)\n          }\n          return undefined\n        }\n      }\n    }\n    boundPluginActionCreators[actionKey] = doubleBoundActionCreators\n    return doubleBoundActionCreators\n  }\n}\n\nconst initAPICallTracing = parentSpan => {\n  const startSpan = (spanName, spanArgs = {}) => {\n    const defaultSpanArgs = { childOf: parentSpan }\n\n    return tracer.startSpan(spanName, _.merge(defaultSpanArgs, spanArgs))\n  }\n\n  return {\n    tracer,\n    parentSpan,\n    startSpan,\n  }\n}\n\nconst deferredAction = type => (...args) => {\n  // Regular createNode returns a Promise, but when deferred we need\n  // to wrap it in another which we resolve when it's actually called\n  if (type === `createNode`) {\n    return new Promise(resolve => {\n      emitter.emit(`ENQUEUE_NODE_MUTATION`, {\n        type,\n        payload: args,\n        resolve,\n      })\n    })\n  }\n  return emitter.emit(`ENQUEUE_NODE_MUTATION`, {\n    type,\n    payload: args,\n  })\n}\n\nconst NODE_MUTATION_ACTIONS = [\n  `createNode`,\n  `deleteNode`,\n  `deleteNodes`,\n  `touchNode`,\n  `createParentChildLink`,\n  `createNodeField`,\n]\n\nconst deferActions = actions => {\n  const deferred = { ...actions }\n  NODE_MUTATION_ACTIONS.forEach(action => {\n    deferred[action] = deferredAction(action)\n  })\n  return deferred\n}\n\nconst getLocalReporter = (activity, reporter) =>\n  activity\n    ? { ...reporter, panicOnBuild: activity.panicOnBuild.bind(activity) }\n    : reporter\n\nconst getUninitializedCache = plugin => {\n  const message =\n    `Usage of \"cache\" instance in \"onPreInit\" API is not supported as ` +\n    `this API runs before cache initialization` +\n    (plugin && plugin !== `default-site-plugin` ? ` (called in ${plugin})` : ``)\n\n  return {\n    get() {\n      throw new Error(message)\n    },\n    set() {\n      throw new Error(message)\n    },\n  }\n}\n\nconst pluginNodeCache = new Map()\n\nconst runAPI = async (plugin, api, args, activity) => {\n  let gatsbyNode = pluginNodeCache.get(plugin.name)\n  if (!gatsbyNode) {\n    gatsbyNode = require(`${plugin.resolve}/gatsby-node`)\n    pluginNodeCache.set(plugin.name, gatsbyNode)\n  }\n\n  if (gatsbyNode[api]) {\n    const parentSpan = args && args.parentSpan\n    const spanOptions = parentSpan ? { childOf: parentSpan } : {}\n    const pluginSpan = tracer.startSpan(`run-plugin`, spanOptions)\n\n    pluginSpan.setTag(`api`, api)\n    pluginSpan.setTag(`plugin`, plugin.name)\n\n    const {\n      publicActions,\n      restrictedActionsAvailableInAPI,\n    } = require(`../redux/actions`)\n    const availableActions = {\n      ...publicActions,\n      ...(restrictedActionsAvailableInAPI[api] || {}),\n    }\n    let boundActionCreators = bindActionCreators(\n      availableActions,\n      store.dispatch\n    )\n\n    if (args.deferNodeMutation) {\n      boundActionCreators = deferActions(boundActionCreators)\n    }\n\n    const doubleBoundActionCreators = doubleBind(\n      boundActionCreators,\n      api,\n      plugin,\n      { ...args, parentSpan: pluginSpan, activity }\n    )\n\n    const { config, program } = store.getState()\n\n    const pathPrefix = (program.prefixPaths && config.pathPrefix) || ``\n    const publicPath = getPublicPath({ ...config, ...program }, ``)\n\n    const namespacedCreateNodeId = id => createNodeId(id, plugin.name)\n\n    const tracing = initAPICallTracing(pluginSpan)\n\n    // See https://github.com/gatsbyjs/gatsby/issues/11369\n    const cache =\n      api === `onPreInit`\n        ? getUninitializedCache(plugin.name)\n        : getCache(plugin.name)\n\n    // Ideally this would be more abstracted and applied to more situations, but right now\n    // this can be potentially breaking so targeting `createPages` API and `createPage` action\n    let actions = doubleBoundActionCreators\n    let apiFinished = false\n    if (api === `createPages`) {\n      let alreadyDisplayed = false\n      const createPageAction = actions.createPage\n      // create new actions object with wrapped createPage action\n      // doubleBoundActionCreators is memoized, so we can't just\n      // reassign createPage field as this would cause this extra logic\n      // to be used in subsequent APIs and we only want to target this `createPages` call.\n      actions = {\n        ...actions,\n        createPage: (...args) => {\n          createPageAction(...args)\n          if (apiFinished && !alreadyDisplayed) {\n            const warning = [\n              reporter.stripIndent(`\n              Action ${chalk.bold(\n                `createPage`\n              )} was called outside of its expected asynchronous lifecycle ${chalk.bold(\n                `createPages`\n              )} in ${chalk.bold(plugin.name)}.\n              Ensure that you return a Promise from ${chalk.bold(\n                `createPages`\n              )} and are awaiting any asynchronous method invocations (like ${chalk.bold(\n                `graphql`\n              )} or http requests).\n              For more info and debugging tips: see ${chalk.bold(\n                `https://gatsby.dev/sync-actions`\n              )}\n            `),\n            ]\n\n            const possiblyCodeFrame = getNonGatsbyCodeFrameFormatted()\n            if (possiblyCodeFrame) {\n              warning.push(possiblyCodeFrame)\n            }\n\n            reporter.warn(warning.join(`\\n\\n`))\n            alreadyDisplayed = true\n          }\n        },\n      }\n    }\n    const localReporter = getLocalReporter(activity, reporter)\n\n    const runningActivities = new Set()\n\n    const localReporterThatCleansUpAfterMisbehavingPlugins = {\n      ...localReporter,\n      activityTimer: (...args) => {\n        const activity = reporter.activityTimer.apply(reporter, args)\n\n        const originalStart = activity.start\n        const originalEnd = activity.end\n\n        activity.start = () => {\n          originalStart.apply(activity)\n          runningActivities.add(activity)\n        }\n\n        activity.end = () => {\n          originalEnd.apply(activity)\n          runningActivities.delete(activity)\n        }\n\n        return activity\n      },\n      createProgress: (...args) => {\n        const activity = reporter.createProgress.apply(reporter, args)\n\n        const originalStart = activity.start\n        const originalEnd = activity.end\n        const originalDone = activity.done\n\n        activity.start = () => {\n          originalStart.apply(activity)\n          runningActivities.add(activity)\n        }\n\n        activity.end = () => {\n          originalEnd.apply(activity)\n          runningActivities.delete(activity)\n        }\n\n        activity.done = () => {\n          originalDone.apply(activity)\n          runningActivities.delete(activity)\n        }\n\n        return activity\n      },\n    }\n\n    const endInProgressActivitiesCreatedByThisRun = () => {\n      runningActivities.forEach(activity => activity.end())\n    }\n\n    const apiCallArgs = [\n      {\n        ...args,\n        basePath: pathPrefix,\n        pathPrefix: publicPath,\n        boundActionCreators: actions,\n        actions,\n        loadNodeContent,\n        store,\n        emitter,\n        getCache,\n        getNodes,\n        getNode,\n        getNodesByType,\n        hasNodeChanged,\n        reporter: localReporterThatCleansUpAfterMisbehavingPlugins,\n        getNodeAndSavePathDependency,\n        cache,\n        createNodeId: namespacedCreateNodeId,\n        createContentDigest,\n        tracing,\n        schema: {\n          buildObjectType,\n          buildUnionType,\n          buildInterfaceType,\n          buildInputObjectType,\n          buildEnumType,\n          buildScalarType,\n        },\n      },\n      plugin.pluginOptions,\n    ]\n\n    // If the plugin is using a callback use that otherwise\n    // expect a Promise to be returned.\n    if (gatsbyNode[api].length === 3) {\n      return Promise.fromCallback(callback => {\n        const cb = (err, val) => {\n          pluginSpan.finish()\n          apiFinished = true\n          endInProgressActivitiesCreatedByThisRun()\n          callback(err, val)\n        }\n\n        try {\n          gatsbyNode[api](...apiCallArgs, cb)\n        } catch (e) {\n          trackBuildError(api, {\n            error: e,\n            pluginName: `${plugin.name}@${plugin.version}`,\n          })\n          throw e\n        }\n      })\n    } else {\n      try {\n        return await gatsbyNode[api](...apiCallArgs)\n      } finally {\n        pluginSpan.finish()\n        apiFinished = true\n        endInProgressActivitiesCreatedByThisRun()\n      }\n    }\n  }\n\n  return null\n}\n\nconst apisRunningById = new Map()\nconst apisRunningByTraceId = new Map()\nlet waitingForCasacadeToFinish = []\n\nmodule.exports = async (api, args = {}, { pluginSource, activity } = {}) =>\n  new Promise(resolve => {\n    const { parentSpan, traceId, traceTags, waitForCascadingActions } = args\n    const apiSpanArgs = parentSpan ? { childOf: parentSpan } : {}\n    const apiSpan = tracer.startSpan(`run-api`, apiSpanArgs)\n\n    apiSpan.setTag(`api`, api)\n    _.forEach(traceTags, (value, key) => {\n      apiSpan.setTag(key, value)\n    })\n\n    const plugins = store.getState().flattenedPlugins\n\n    // Get the list of plugins that implement this API.\n    // Also: Break infinite loops. Sometimes a plugin will implement an API and\n    // call an action which will trigger the same API being called.\n    // `onCreatePage` is the only example right now. In these cases, we should\n    // avoid calling the originating plugin again.\n    const implementingPlugins = plugins.filter(\n      plugin => plugin.nodeAPIs.includes(api) && plugin.name !== pluginSource\n    )\n\n    const apiRunInstance = {\n      api,\n      args,\n      pluginSource,\n      resolve,\n      span: apiSpan,\n      startTime: new Date().toJSON(),\n      traceId,\n    }\n\n    // Generate IDs for api runs. Most IDs we generate from the args\n    // but some API calls can have very large argument objects so we\n    // have special ways of generating IDs for those to avoid stringifying\n    // large objects.\n    let id\n    if (api === `setFieldsOnGraphQLNodeType`) {\n      id = `${api}${apiRunInstance.startTime}${args.type.name}${traceId}`\n    } else if (api === `onCreateNode`) {\n      id = `${api}${apiRunInstance.startTime}${args.node.internal.contentDigest}${traceId}`\n    } else if (api === `preprocessSource`) {\n      id = `${api}${apiRunInstance.startTime}${args.filename}${traceId}`\n    } else if (api === `onCreatePage`) {\n      id = `${api}${apiRunInstance.startTime}${args.page.path}${traceId}`\n    } else {\n      // When tracing is turned on, the `args` object will have a\n      // `parentSpan` field that can be quite large. So we omit it\n      // before calling stringify\n      const argsJson = JSON.stringify(_.omit(args, `parentSpan`))\n      id = `${api}|${apiRunInstance.startTime}|${apiRunInstance.traceId}|${argsJson}`\n    }\n    apiRunInstance.id = id\n\n    if (waitForCascadingActions) {\n      waitingForCasacadeToFinish.push(apiRunInstance)\n    }\n\n    if (apisRunningById.size === 0) {\n      emitter.emit(`API_RUNNING_START`)\n    }\n\n    apisRunningById.set(apiRunInstance.id, apiRunInstance)\n    if (apisRunningByTraceId.has(apiRunInstance.traceId)) {\n      const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n      apisRunningByTraceId.set(apiRunInstance.traceId, currentCount + 1)\n    } else {\n      apisRunningByTraceId.set(apiRunInstance.traceId, 1)\n    }\n\n    let stopQueuedApiRuns = false\n    let onAPIRunComplete = null\n    if (api === `onCreatePage`) {\n      const path = args.page.path\n      const actionHandler = action => {\n        if (action.payload.path === path) {\n          stopQueuedApiRuns = true\n        }\n      }\n      emitter.on(`DELETE_PAGE`, actionHandler)\n      onAPIRunComplete = () => {\n        emitter.off(`DELETE_PAGE`, actionHandler)\n      }\n    }\n\n    Promise.mapSeries(implementingPlugins, plugin => {\n      if (stopQueuedApiRuns) {\n        return null\n      }\n\n      const pluginName =\n        plugin.name === `default-site-plugin` ? `gatsby-node.js` : plugin.name\n\n      return new Promise(resolve => {\n        resolve(runAPI(plugin, api, { ...args, parentSpan: apiSpan }, activity))\n      }).catch(err => {\n        decorateEvent(`BUILD_PANIC`, {\n          pluginName: `${plugin.name}@${plugin.version}`,\n        })\n\n        const localReporter = getLocalReporter(activity, reporter)\n\n        const file = stackTrace\n          .parse(err)\n          .find(file => /gatsby-node/.test(file.fileName))\n\n        let codeFrame = ``\n        const structuredError = errorParser({ err })\n\n        if (file) {\n          const { fileName, lineNumber: line, columnNumber: column } = file\n\n          const code = fs.readFileSync(fileName, { encoding: `utf-8` })\n          codeFrame = codeFrameColumns(\n            code,\n            {\n              start: {\n                line,\n                column,\n              },\n            },\n            {\n              highlightCode: true,\n            }\n          )\n\n          structuredError.location = {\n            start: { line: line, column: column },\n          }\n          structuredError.filePath = fileName\n        }\n\n        structuredError.context = {\n          ...structuredError.context,\n          pluginName,\n          api,\n          codeFrame,\n        }\n\n        localReporter.panicOnBuild(structuredError)\n\n        return null\n      })\n    }).then(results => {\n      if (onAPIRunComplete) {\n        onAPIRunComplete()\n      }\n      // Remove runner instance\n      apisRunningById.delete(apiRunInstance.id)\n      const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n      apisRunningByTraceId.set(apiRunInstance.traceId, currentCount - 1)\n\n      if (apisRunningById.size === 0) {\n        emitter.emit(`API_RUNNING_QUEUE_EMPTY`)\n      }\n\n      // Filter empty results\n      apiRunInstance.results = results.filter(result => !_.isEmpty(result))\n\n      // Filter out empty responses and return if the\n      // api caller isn't waiting for cascading actions to finish.\n      if (!waitForCascadingActions) {\n        apiSpan.finish()\n        resolve(apiRunInstance.results)\n      }\n\n      // Check if any of our waiters are done.\n      waitingForCasacadeToFinish = waitingForCasacadeToFinish.filter(\n        instance => {\n          // If none of its trace IDs are running, it's done.\n          const apisByTraceIdCount = apisRunningByTraceId.get(instance.traceId)\n          if (apisByTraceIdCount === 0) {\n            instance.span.finish()\n            instance.resolve(instance.results)\n            return false\n          } else {\n            return true\n          }\n        }\n      )\n      return\n    })\n  })\n"],"file":"api-runner-node.js"}