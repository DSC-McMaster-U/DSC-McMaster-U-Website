import { slicedToArray as _slicedToArray, objectSpread2 as _objectSpread2, defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.js';
import { radii as S, shadows as u, fonts as i, fontWeights as t, fontSizes as b, lineHeights as n, letterSpacings as d, transition as j } from '../../node_modules/gatsby-design-tokens/dist/index.esm.esm.js';
import colors from './colors.esm.js';
import zIndices from './zIndices.esm.js';
import space from './space.esm.js';
import breakpoints, { breakpointsList } from './breakpoints.esm.js';
import tones from './tones.esm.js';

var themeColors = colors;
/**
 * Tones
 */

var themeTones = tones;
/**
 * Font families
 */

var themeFonts = i;
/**
 * Font weights
 */

var themeFontWeights = t;
/**
 * Font sizes
 */

var themeFontSizes = b;
/**
 * Line heights
 */

var themeLineHeights = n;
/**
 * Letter spacings
 */

var themeLetterSpacings = d;
/**
 * Space
 */

var themeSpace = space;
/**
 * Radii
 */

var themeRadii = S;
/**
 * Shadows
 */

var themeShadows = u;
/**
 * Z indices
 */

var themeZIndices = zIndices;
/**
 * Breakpoints
 */

var themeBreakpoints = breakpointsList;
/**
 * Media breakpoints
 */

var themeMediaBreakpoints = breakpoints;
/**
 * Media queries
 */

var themeMediaQueries = Object.entries(breakpoints).reduce(function (memo, _ref) {
  var _ref2 = _slicedToArray(_ref, 2),
      breakpoint = _ref2[0],
      widthInPx = _ref2[1];

  return _objectSpread2({}, memo, _defineProperty({}, breakpoint, "@media (min-width: ".concat(widthInPx, "px)")));
}, {});
/**
 * Transitions
 */

var themeTransitions = j;
/**
 * Cards
 */

var themeCardStyles = {
  frame: {
    background: colors.primaryBackground,
    borderRadius: S[2],
    boxShadow: u.raised
  },
  space: {
    DEFAULT: {
      paddingTop: space[6],
      paddingBottom: space[5],
      paddingLeft: space[7],
      paddingRight: space[3]
    },
    M: {
      paddingTop: space[5],
      paddingBottom: space[5],
      paddingLeft: space[9],
      paddingRight: space[9]
    },
    L: {
      paddingTop: space[7],
      paddingBottom: space[8],
      paddingLeft: space[9],
      paddingRight: space[9]
    }
  }
};
var defaultTheme = {
  colors: themeColors,
  tones: themeTones,
  fonts: themeFonts,
  fontWeights: themeFontWeights,
  fontSizes: themeFontSizes,
  lineHeights: themeLineHeights,
  letterSpacings: themeLetterSpacings,
  space: themeSpace,
  radii: themeRadii,
  shadows: themeShadows,
  zIndices: themeZIndices,
  breakpoints: themeBreakpoints,
  mediaBreakpoints: themeMediaBreakpoints,
  mediaQueries: themeMediaQueries,
  transitions: themeTransitions,
  cardStyles: themeCardStyles
};
function getTheme() {
  return defaultTheme;
}

export { getTheme };
//# sourceMappingURL=index.esm.js.map
