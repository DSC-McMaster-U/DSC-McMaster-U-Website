{"version":3,"file":"FormattedLogMessage.esm.js","sources":["../../../../src/components/BuildLogs/FormattedLogMessage.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport React from \"react\"\nimport { BuildLogItem, StructuredLogLevel } from \"./types\"\nimport { ThemeCss, Theme } from \"../../theme\"\nimport { formatLogMessage } from \"./utils\"\n\nexport type FormattedLogMessageProps = Pick<\n  BuildLogItem,\n  \"level\" | \"message\"\n> & {\n  className?: string\n}\n\nexport function FormattedLogMessage({\n  level,\n  message,\n  className,\n}: FormattedLogMessageProps) {\n  return (\n    <div css={getMessageCss(level)} className={className}>\n      {formatLogMessage(message || \"\").map((element, index) => (\n        <React.Fragment key={index}>{element}</React.Fragment>\n      ))}\n    </div>\n  )\n}\n\nfunction getMessageCss(level: StructuredLogLevel | null | undefined): ThemeCss {\n  return theme => {\n    const spaceMixin = {\n      margin: 0,\n\n      \"&:not(:last-child)\": {\n        marginBottom: theme.space[3],\n      },\n    }\n\n    return {\n      whiteSpace: `pre-wrap`,\n      display: `block`,\n\n      ul: [\n        spaceMixin,\n        {\n          marginBottom: theme.space[3],\n          marginLeft: theme.space[5],\n          color: theme.colors.grey[50],\n          listStyle: `disc`,\n          fontSize: theme.fontSizes[0],\n\n          li: {\n            marginBottom: theme.space[2],\n          },\n        },\n      ],\n\n      pre: [\n        spaceMixin,\n        {\n          padding: `${theme.space[5]} ${theme.space[4]}`,\n          fontSize: theme.fontSizes[1],\n          lineHeight: theme.lineHeights.solid,\n          color: theme.colors.grey[60],\n          borderRadius: theme.radii[2],\n          background: theme.colors.grey[5],\n          overflowY: \"auto\",\n\n          code: {\n            lineHeight: theme.lineHeights.default,\n          },\n\n          em: {\n            color: getLogLevelColor(level)(theme),\n            fontStyle: `normal`,\n            fontWeight: `bold`,\n          },\n\n          span: {\n            color: theme.colors.grey[60],\n          },\n        },\n      ],\n\n      p: [\n        spaceMixin,\n        {\n          color: theme.colors.grey[50],\n          fontSize: theme.fontSizes[0],\n\n          \"&:first-of-type\": {\n            color: getLogLevelColor(level)(theme),\n            fontSize: theme.fontSizes[1],\n          },\n\n          a: {\n            textDecoration: `none`,\n          },\n        },\n      ],\n    }\n  }\n}\n\nfunction getLogLevelColor(logLevel: StructuredLogLevel | null | undefined) {\n  return (theme: Theme) => {\n    switch (logLevel) {\n      case StructuredLogLevel.Error:\n        return theme.colors.red[70]\n      case StructuredLogLevel.Warning:\n        return theme.colors.yellow[90]\n      default:\n        return theme.colors.grey[80]\n    }\n  }\n}\n"],"names":["FormattedLogMessage","level","message","className","getMessageCss","formatLogMessage","map","element","index","React","theme","spaceMixin","margin","marginBottom","space","whiteSpace","display","ul","marginLeft","color","colors","grey","listStyle","fontSize","fontSizes","li","pre","padding","lineHeight","lineHeights","solid","borderRadius","radii","background","overflowY","code","em","getLogLevelColor","fontStyle","fontWeight","span","p","a","textDecoration","logLevel","StructuredLogLevel","Error","red","Warning","yellow"],"mappings":"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"}