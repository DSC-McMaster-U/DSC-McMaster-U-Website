import { objectWithoutProperties as _objectWithoutProperties, extends as _extends, defineProperty as _defineProperty } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import { jsx } from '@emotion/core';
import _pt from 'prop-types';
import { Heading } from '../Heading/Heading.esm.js';

var baseCss = function baseCss(theme) {
  return theme.cardStyles.frame;
};

function Card(_ref) {
  var _ref$as = _ref.as,
      Component = _ref$as === void 0 ? "article" : _ref$as,
      rest = _objectWithoutProperties(_ref, ["as"]);

  return jsx(Component, _extends({
    css: baseCss
  }, rest));
}
Card.propTypes = {
  as: _pt.oneOf(["article", "div"])
};
function CardSection(_ref2) {
  var _ref2$as = _ref2.as,
      Component = _ref2$as === void 0 ? "div" : _ref2$as,
      _ref2$applyPaddingTop = _ref2.applyPaddingTop,
      applyPaddingTop = _ref2$applyPaddingTop === void 0 ? true : _ref2$applyPaddingTop,
      _ref2$applyPaddingBot = _ref2.applyPaddingBottom,
      applyPaddingBottom = _ref2$applyPaddingBot === void 0 ? true : _ref2$applyPaddingBot,
      _ref2$applyPaddingLef = _ref2.applyPaddingLeft,
      applyPaddingLeft = _ref2$applyPaddingLef === void 0 ? true : _ref2$applyPaddingLef,
      _ref2$applyPaddingRig = _ref2.applyPaddingRight,
      applyPaddingRight = _ref2$applyPaddingRig === void 0 ? true : _ref2$applyPaddingRig,
      rest = _objectWithoutProperties(_ref2, ["as", "applyPaddingTop", "applyPaddingBottom", "applyPaddingLeft", "applyPaddingRight"]);

  var baseSectionCss = function baseSectionCss(theme) {
    return [applyPaddingTop && _defineProperty({
      paddingTop: theme.space[7]
    }, theme.mediaQueries.desktop, {
      paddingTop: theme.cardStyles.space.L.paddingTop
    }), applyPaddingBottom && _defineProperty({
      paddingBottom: theme.space[7]
    }, theme.mediaQueries.desktop, {
      paddingBottom: theme.cardStyles.space.L.paddingBottom
    }), applyPaddingLeft && _defineProperty({
      paddingLeft: theme.space[7]
    }, theme.mediaQueries.desktop, {
      paddingLeft: theme.cardStyles.space.L.paddingLeft
    }), applyPaddingRight && _defineProperty({
      paddingRight: theme.space[7]
    }, theme.mediaQueries.desktop, {
      paddingRight: theme.cardStyles.space.L.paddingRight
    })];
  };

  return jsx(Component, _extends({
    css: baseSectionCss
  }, rest));
}
CardSection.propTypes = {
  as: _pt.oneOf(["div", "p", "section", "header"]),
  applyPaddingTop: _pt.bool,
  applyPaddingBottom: _pt.bool,
  applyPaddingLeft: _pt.bool,
  applyPaddingRight: _pt.bool
};

var headerCss = function headerCss(theme) {
  return {
    display: "flex",
    alignItems: "center",
    justifyContent: "space-between",
    fontSize: theme.fontSizes[4],
    lineHeight: 1
  };
};

function CardHeader(_ref7) {
  var _ref7$as = _ref7.as,
      as = _ref7$as === void 0 ? "header" : _ref7$as,
      title = _ref7.title,
      _ref7$titleAs = _ref7.titleAs,
      titleAs = _ref7$titleAs === void 0 ? "h3" : _ref7$titleAs,
      children = _ref7.children,
      rest = _objectWithoutProperties(_ref7, ["as", "title", "titleAs", "children"]);

  return jsx(CardSection, _extends({
    as: as,
    css: headerCss
  }, rest), jsx(Heading, {
    as: titleAs
  }, title), children);
}
CardHeader.propTypes = {
  as: _pt.oneOf(["header", "div"]),
  title: _pt.node.isRequired
};

var footerCss = function footerCss(theme) {
  return {
    background: theme.colors.purple[5],
    display: "flex",
    alignItems: "center",
    justifyContent: "space-between",
    borderBottomLeftRadius: theme.cardStyles.frame.borderRadius,
    borderBottomRightRadius: theme.cardStyles.frame.borderRadius
  };
};

function CardFooter(props) {
  return jsx(CardSection, _extends({
    css: footerCss
  }, props));
}
CardFooter.propTypes = {
  as: _pt.oneOf(["div", "p", "section", "header"]),
  applyPaddingTop: _pt.bool,
  applyPaddingBottom: _pt.bool,
  applyPaddingLeft: _pt.bool,
  applyPaddingRight: _pt.bool
};

var dividerCss = function dividerCss(theme) {
  return {
    border: 0,
    borderTop: "1px solid ".concat(theme.colors.standardLine),
    margin: 0
  };
};

function CardDivider(props) {
  return jsx("hr", _extends({
    css: dividerCss
  }, props));
}
Card.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "Card",
  "props": {
    "as": {
      "defaultValue": {
        "value": "`article`",
        "computed": false
      },
      "required": false,
      "tsType": {
        "name": "union",
        "raw": "\"article\" | \"div\"",
        "elements": [{
          "name": "literal",
          "value": "\"article\""
        }, {
          "name": "literal",
          "value": "\"div\""
        }]
      },
      "description": ""
    }
  }
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/Card/Card.tsx"] = {
    name: "Card",
    docgenInfo: Card.__docgenInfo,
    path: "src/components/Card/Card.tsx"
  };
}

CardSection.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "CardSection",
  "props": {
    "as": {
      "defaultValue": {
        "value": "`div`",
        "computed": false
      },
      "required": false,
      "tsType": {
        "name": "union",
        "raw": "`div` | `p` | `section` | `header`",
        "elements": [{
          "name": "literal",
          "value": "undefined"
        }, {
          "name": "literal",
          "value": "undefined"
        }, {
          "name": "literal",
          "value": "undefined"
        }, {
          "name": "literal",
          "value": "undefined"
        }]
      },
      "description": ""
    },
    "applyPaddingTop": {
      "defaultValue": {
        "value": "true",
        "computed": false
      },
      "required": false,
      "tsType": {
        "name": "boolean"
      },
      "description": ""
    },
    "applyPaddingBottom": {
      "defaultValue": {
        "value": "true",
        "computed": false
      },
      "required": false,
      "tsType": {
        "name": "boolean"
      },
      "description": ""
    },
    "applyPaddingLeft": {
      "defaultValue": {
        "value": "true",
        "computed": false
      },
      "required": false,
      "tsType": {
        "name": "boolean"
      },
      "description": ""
    },
    "applyPaddingRight": {
      "defaultValue": {
        "value": "true",
        "computed": false
      },
      "required": false,
      "tsType": {
        "name": "boolean"
      },
      "description": ""
    }
  }
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/Card/Card.tsx"] = {
    name: "CardSection",
    docgenInfo: CardSection.__docgenInfo,
    path: "src/components/Card/Card.tsx"
  };
}

CardHeader.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "CardHeader",
  "props": {
    "as": {
      "defaultValue": {
        "value": "`header`",
        "computed": false
      },
      "required": false,
      "tsType": {
        "name": "union",
        "raw": "\"header\" | \"div\"",
        "elements": [{
          "name": "literal",
          "value": "\"header\""
        }, {
          "name": "literal",
          "value": "\"div\""
        }]
      },
      "description": ""
    },
    "titleAs": {
      "defaultValue": {
        "value": "`h3`",
        "computed": false
      },
      "required": false,
      "tsType": {
        "name": "HeadingProps[\"as\"]",
        "raw": "HeadingProps[\"as\"]"
      },
      "description": ""
    },
    "title": {
      "required": true,
      "tsType": {
        "name": "ReactReactNode",
        "raw": "React.ReactNode"
      },
      "description": ""
    }
  }
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/Card/Card.tsx"] = {
    name: "CardHeader",
    docgenInfo: CardHeader.__docgenInfo,
    path: "src/components/Card/Card.tsx"
  };
}

CardFooter.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "CardFooter",
  "props": {
    "as": {
      "required": false,
      "tsType": {
        "name": "union",
        "raw": "`div` | `p` | `section` | `header`",
        "elements": [{
          "name": "literal",
          "value": "undefined"
        }, {
          "name": "literal",
          "value": "undefined"
        }, {
          "name": "literal",
          "value": "undefined"
        }, {
          "name": "literal",
          "value": "undefined"
        }]
      },
      "description": ""
    },
    "applyPaddingTop": {
      "required": false,
      "tsType": {
        "name": "boolean"
      },
      "description": ""
    },
    "applyPaddingBottom": {
      "required": false,
      "tsType": {
        "name": "boolean"
      },
      "description": ""
    },
    "applyPaddingLeft": {
      "required": false,
      "tsType": {
        "name": "boolean"
      },
      "description": ""
    },
    "applyPaddingRight": {
      "required": false,
      "tsType": {
        "name": "boolean"
      },
      "description": ""
    }
  }
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/Card/Card.tsx"] = {
    name: "CardFooter",
    docgenInfo: CardFooter.__docgenInfo,
    path: "src/components/Card/Card.tsx"
  };
}

CardDivider.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "CardDivider"
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/Card/Card.tsx"] = {
    name: "CardDivider",
    docgenInfo: CardDivider.__docgenInfo,
    path: "src/components/Card/Card.tsx"
  };
}

export { Card, CardDivider, CardFooter, CardHeader, CardSection };
//# sourceMappingURL=Card.esm.js.map
