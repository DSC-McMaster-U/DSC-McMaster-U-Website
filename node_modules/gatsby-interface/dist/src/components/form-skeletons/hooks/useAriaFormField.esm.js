import { getErrorAriaLiveAttribute, getHintId, getErrorId } from '../utils/index.esm.js';

function useAriaFormField(fieldId, _ref) {
  var _ref$required = _ref.required,
      required = _ref$required === void 0 ? false : _ref$required,
      _ref$hasError = _ref.hasError,
      hasError = _ref$hasError === void 0 ? false : _ref$hasError,
      _ref$hasHint = _ref.hasHint,
      hasHint = _ref$hasHint === void 0 ? false : _ref$hasHint,
      validationMode = _ref.validationMode;
  var hintId = getHintId(fieldId);
  var errorId = getErrorId(fieldId);
  var controlDescribedBy = [hasError && errorId, hasHint && hintId].filter(function (describedBy) {
    return describedBy;
  }).join(" ") || undefined;
  return {
    controlProps: {
      id: fieldId,
      "aria-describedby": controlDescribedBy,
      "aria-invalid": hasError,
      required: required
    },
    labelProps: {
      htmlFor: fieldId
    },
    hintProps: {
      id: hintId,
      hidden: !hasHint
    },
    errorProps: {
      id: errorId,
      hidden: !hasError,
      "aria-live": getErrorAriaLiveAttribute(validationMode)
    }
  };
}

export { useAriaFormField };
//# sourceMappingURL=useAriaFormField.esm.js.map
