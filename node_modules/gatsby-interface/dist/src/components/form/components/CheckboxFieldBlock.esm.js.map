{"version":3,"file":"CheckboxFieldBlock.esm.js","sources":["../../../../../src/components/form/components/CheckboxFieldBlock.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport React from \"react\"\n\nimport { WithFormFieldBlock } from \"./FormFieldBlock\"\nimport {\n  StyledCheckboxLabel,\n  StyledCheckbox,\n  StyledCheckboxProps,\n} from \"./styled-primitives/StyledCheckbox\"\nimport { useAriaFormField } from \"../../form-skeletons\"\nimport { FormHint, FormError } from \"./styled-primitives/StyledFormElements\"\nimport { ThemeCss } from \"../../../theme\"\n\nconst baseCss: ThemeCss = _theme => ({\n  display: `flex`,\n  alignItems: `baseline`,\n})\n\nconst checkboxContainerCss: ThemeCss = theme => ({\n  marginRight: theme.space[4],\n})\n\nexport type CheckboxFieldBlockProps = Omit<\n  WithFormFieldBlock<StyledCheckboxProps>,\n  \"layout\"\n>\n\nexport const CheckboxFieldBlock = React.forwardRef<\n  HTMLInputElement,\n  CheckboxFieldBlockProps\n>(function CheckboxFieldBlock(props, ref) {\n  const {\n    id,\n    label,\n    labelSize,\n    error,\n    hint,\n    className,\n    validationMode,\n    required,\n    ...rest\n  } = props\n\n  const fieldData = useAriaFormField(id, {\n    required: required,\n    hasError: !!error,\n    hasHint: !!hint,\n    validationMode,\n  })\n\n  return (\n    <div css={baseCss} className={className}>\n      <div css={checkboxContainerCss}>\n        <StyledCheckbox ref={ref} {...fieldData.controlProps} {...rest} />\n      </div>\n      <div>\n        <StyledCheckboxLabel\n          required={fieldData.controlProps.required}\n          labelSize={labelSize}\n          {...fieldData.labelProps}\n        >\n          {label}\n        </StyledCheckboxLabel>\n        <FormHint {...fieldData.hintProps}>{hint}</FormHint>\n        <FormError {...fieldData.errorProps}>{error}</FormError>\n      </div>\n    </div>\n  )\n})\n"],"names":["baseCss","_theme","display","alignItems","checkboxContainerCss","theme","marginRight","space","CheckboxFieldBlock","React","forwardRef","props","ref","id","label","labelSize","error","hint","className","validationMode","required","rest","fieldData","useAriaFormField","hasError","hasHint","controlProps","labelProps","hintProps","errorProps"],"mappings":";;;;;;;;;;;;;;;;AAcA,IAAMA,OAAiB,GAAG,SAApBA,OAAoB,CAAAC,MAAM;AAAA,SAAK;AACnCC,IAAAA,OAAO,QAD4B;AAEnCC,IAAAA,UAAU;AAFyB,GAAL;AAAA,CAAhC;;AAKA,IAAMC,oBAA8B,GAAG,SAAjCA,oBAAiC,CAAAC,KAAK;AAAA,SAAK;AAC/CC,IAAAA,WAAW,EAAED,KAAK,CAACE,KAAN,CAAY,CAAZ;AADkC,GAAL;AAAA,CAA5C;;IASaC,kBAAkB,GAAGC,cAAK,CAACC,UAAN,CAGhC,SAASF,kBAAT,CAA4BG,KAA5B,EAAmCC,GAAnC,EAAwC;AAAA,MAEtCC,EAFsC,GAWpCF,KAXoC,CAEtCE,EAFsC;AAAA,MAGtCC,KAHsC,GAWpCH,KAXoC,CAGtCG,KAHsC;AAAA,MAItCC,SAJsC,GAWpCJ,KAXoC,CAItCI,SAJsC;AAAA,MAKtCC,KALsC,GAWpCL,KAXoC,CAKtCK,KALsC;AAAA,MAMtCC,IANsC,GAWpCN,KAXoC,CAMtCM,IANsC;AAAA,MAOtCC,SAPsC,GAWpCP,KAXoC,CAOtCO,SAPsC;AAAA,MAQtCC,cARsC,GAWpCR,KAXoC,CAQtCQ,cARsC;AAAA,MAStCC,QATsC,GAWpCT,KAXoC,CAStCS,QATsC;AAAA,MAUnCC,IAVmC,4BAWpCV,KAXoC;;AAaxC,MAAMW,SAAS,GAAGC,gBAAgB,CAACV,EAAD,EAAK;AACrCO,IAAAA,QAAQ,EAAEA,QAD2B;AAErCI,IAAAA,QAAQ,EAAE,CAAC,CAACR,KAFyB;AAGrCS,IAAAA,OAAO,EAAE,CAAC,CAACR,IAH0B;AAIrCE,IAAAA,cAAc,EAAdA;AAJqC,GAAL,CAAlC;AAOA,SACE;AAAK,IAAA,GAAG,EAAEnB,OAAV;AAAmB,IAAA,SAAS,EAAEkB;AAA9B,KACE;AAAK,IAAA,GAAG,EAAEd;AAAV,KACE,IAAC,cAAD;AAAgB,IAAA,GAAG,EAAEQ;AAArB,KAA8BU,SAAS,CAACI,YAAxC,EAA0DL,IAA1D,EADF,CADF,EAIE,iBACE,IAAC,mBAAD;AACE,IAAA,QAAQ,EAAEC,SAAS,CAACI,YAAV,CAAuBN,QADnC;AAEE,IAAA,SAAS,EAAEL;AAFb,KAGMO,SAAS,CAACK,UAHhB,GAKGb,KALH,CADF,EAQE,IAAC,QAAD,EAAcQ,SAAS,CAACM,SAAxB,EAAoCX,IAApC,CARF,EASE,IAAC,SAAD,EAAeK,SAAS,CAACO,UAAzB,EAAsCb,KAAtC,CATF,CAJF,CADF;AAkBD,CAzCiC;;;;;;;;;;;;;;;;;"}