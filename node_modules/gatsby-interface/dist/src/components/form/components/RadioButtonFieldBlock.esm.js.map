{"version":3,"file":"RadioButtonFieldBlock.esm.js","sources":["../../../../../src/components/form/components/RadioButtonFieldBlock.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\n\nimport {\n  RadioButtonFieldOptionItemProps,\n  RadioButtonFieldVariant,\n} from \"./RadioButtonField\"\nimport { FormGroupOptionsDirection } from \"./FormGroupField\"\nimport { FormGroupFieldBlock, WithFormFieldBlock } from \"./FormFieldBlock\"\nimport {\n  StyledRadioButton,\n  StyledRadioLabel,\n} from \"./styled-primitives/StyledRadio\"\nimport { OptionsContainer } from \"./styled-primitives/StyledFormElements\"\nimport { Theme, ThemeCss } from \"../../../theme\"\nimport React from \"react\"\nimport { getOptionLabelOffsetStyles } from \"../styles\"\n\nconst framedCss: ThemeCss = theme => ({\n  border: `2px solid ${theme.colors.white}`,\n  borderRadius: theme.radii[3],\n  margin: 0,\n  width: `100%`,\n  transition: `border .15s ease-in-out`,\n  paddingTop: theme.space[4],\n  paddingBottom: theme.space[4],\n  paddingLeft: theme.space[4],\n  paddingRight: theme.space[5],\n})\n\nexport type RadioButtonFieldBlockOption = {\n  label: React.ReactNode\n  value: string\n} & Partial<Omit<RadioButtonFieldOptionItemProps, \"label\" | \"value\">>\n\nexport type RadioButtonFieldBlockProps = WithFormFieldBlock<\n  {\n    options: RadioButtonFieldBlockOption[]\n    value?: string\n    optionsDirection?: FormGroupOptionsDirection\n    variant?: RadioButtonFieldVariant\n  } & Omit<RadioButtonFieldOptionItemProps, \"value\">\n>\n\nexport const RadioButtonFieldBlock = (props: RadioButtonFieldBlockProps) => {\n  const {\n    id,\n    label,\n    labelSize,\n    error,\n    hint,\n    className,\n    validationMode,\n    value: fieldValue,\n    options,\n    layout,\n    optionsDirection,\n    variant,\n    required,\n    ...rest\n  } = props\n\n  const [checkedOption, setCheckedOption] = React.useState<string | undefined>(\n    () => {\n      if (fieldValue) {\n        return fieldValue\n      }\n\n      const defaultCheckedOption = options.find(\n        ({ defaultChecked }) => defaultChecked\n      )\n      return defaultCheckedOption ? defaultCheckedOption.value : undefined\n    }\n  )\n\n  return (\n    <FormGroupFieldBlock\n      id={id}\n      label={label}\n      error={error}\n      hint={hint}\n      required={required}\n      labelSize={labelSize}\n      validationMode={validationMode}\n      layout={layout}\n      className={className}\n    >\n      {({ getOptionControlProps, getOptionLabelProps }) => (\n        <OptionsContainer optionsDirection={optionsDirection}>\n          {options.map(({ value, label, ...restOption }) => (\n            <div\n              key={value}\n              onChange={() => setCheckedOption(value)}\n              css={(theme: Theme) => [\n                {\n                  display: `flex`,\n                  flexShrink: 0,\n                  marginBottom: theme.space[4],\n                },\n                variant === `framed`\n                  ? [\n                      framedCss(theme),\n                      value === checkedOption && {\n                        borderColor: theme.colors.purple[60],\n                      },\n                    ]\n                  : [\n                      {\n                        marginBottom: theme.space[4],\n                      },\n                      optionsDirection === `row`\n                        ? {\n                            marginRight: theme.space[6],\n                          }\n                        : {\n                            \"&:last-of-type\": {\n                              marginBottom: 0,\n                            },\n                          },\n                    ],\n              ]}\n            >\n              <StyledRadioButton\n                value={value}\n                // Support uncontrolled field\n                checked={\n                  fieldValue === undefined ? undefined : fieldValue === value\n                }\n                {...getOptionControlProps(value)}\n                {...rest}\n                {...restOption}\n              />\n              <StyledRadioLabel\n                {...getOptionLabelProps(value)}\n                css={getOptionLabelOffsetStyles(optionsDirection)}\n              >\n                {label}\n              </StyledRadioLabel>\n            </div>\n          ))}\n        </OptionsContainer>\n      )}\n    </FormGroupFieldBlock>\n  )\n}\n"],"names":["framedCss","theme","border","colors","white","borderRadius","radii","margin","width","transition","paddingTop","space","paddingBottom","paddingLeft","paddingRight","RadioButtonFieldBlock","props","id","label","labelSize","error","hint","className","validationMode","fieldValue","value","options","layout","optionsDirection","variant","required","rest","React","useState","defaultCheckedOption","find","defaultChecked","undefined","checkedOption","setCheckedOption","getOptionControlProps","getOptionLabelProps","map","restOption","display","flexShrink","marginBottom","borderColor","purple","marginRight","getOptionLabelOffsetStyles"],"mappings":"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"}