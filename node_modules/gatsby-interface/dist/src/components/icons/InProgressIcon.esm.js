import { extends as _extends, taggedTemplateLiteral as _taggedTemplateLiteral } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import { jsx, keyframes } from '@emotion/core';
import IconSkeleton from './IconSkeleton.esm.js';

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  100% {\n    transform: rotate(360deg);\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var rotating = keyframes(_templateObject());

var animatedCss = function animatedCss(_theme) {
  return {
    animation: "".concat(rotating, " 1s infinite"),
    animationTimingFunction: "linear",
    transform: "rotate(0)"
  };
};

function InProgressIcon(props) {
  var mask0Id = "InProgressIcon__mask0--".concat(props.id || "noid");
  var mask1Id = "InProgressIcon__mask1--".concat(props.id || "noid");
  var mask2Id = "InProgressIcon__mask2--".concat(props.id || "noid");
  var filterId = "InProgressIcon__filter--".concat(props.id || "noid");
  var gradientId = "InProgressIcon__gradient--".concat(props.id || "noid");
  return jsx(IconSkeleton, _extends({}, props, {
    iconName: "InProgressIcon",
    applyColorToStroke: false,
    css: animatedCss
  }), jsx("mask", {
    id: mask0Id,
    "mask-type": "alpha",
    maskUnits: "userSpaceOnUse",
    x: "2",
    y: "2",
    width: "20",
    height: "20"
  }, jsx("mask", {
    id: mask1Id,
    maskUnits: "userSpaceOnUse",
    x: "2",
    y: "12",
    width: "20",
    height: "10"
  }, jsx("path", {
    d: "M12 22C17.5229 22 22 17.5229 22 12L2.00003 12C2.00003 17.5229 6.47718 22 12 22Z",
    fill: "#232129"
  })), jsx("g", {
    mask: "url(#".concat(mask1Id)
  }, jsx("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M11.9996 22C17.5224 22 21.9995 17.5228 21.9995 12C21.9995 6.47714 17.5224 2 11.9996 2C6.47672 2 1.99957 6.47714 1.99957 12C1.99957 17.5228 6.47672 22 11.9996 22ZM11.9994 19.9999C16.4177 19.9999 19.9994 16.4182 19.9994 11.9999C19.9994 7.58166 16.4177 3.99994 11.9994 3.99994C7.58111 3.99994 3.99939 7.58166 3.99939 11.9999C3.99939 16.4182 7.58111 19.9999 11.9994 19.9999Z",
    fill: "#2DE3DA"
  })), jsx("mask", {
    id: mask2Id,
    maskUnits: "userSpaceOnUse",
    x: "2",
    y: "2",
    width: "20",
    height: "20"
  }, jsx("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12 22C17.5228 22 22 17.5229 22 12C22 6.47718 17.5228 2.00003 12 2.00003C6.47714 2.00003 2 6.47718 2 12C2 17.5229 6.47714 22 12 22ZM11.9998 20C16.4181 20 19.9998 16.4182 19.9998 12C19.9998 7.58169 16.4181 3.99997 11.9998 3.99997C7.58154 3.99997 3.99982 7.58169 3.99982 12C3.99982 16.4182 7.58154 20 11.9998 20Z",
    fill: "#2DE3DA"
  })), jsx("g", {
    mask: "url(#".concat(mask2Id)
  }, jsx("path", {
    d: "M12 2.00003C6.47714 2.00003 2 6.47718 2 12L22 12C22 6.47718 17.5228 2.00003 12 2.00003Z",
    fill: "url(#".concat(gradientId, ")")
  }))), jsx("g", {
    mask: "url(#".concat(mask0Id)
  }, jsx("circle", {
    cx: "12",
    cy: "12",
    r: "9.99998",
    fill: "currentColor",
    style: {
      filter: "url(#".concat(filterId, ")")
    }
  })), jsx("circle", {
    cx: "12",
    cy: "12",
    r: "4",
    fill: "currentColor"
  }), jsx("defs", null, jsx("linearGradient", {
    id: gradientId,
    x1: "5.74999",
    y1: "12",
    x2: "18.25",
    y2: "12",
    gradientUnits: "userSpaceOnUse"
  }, jsx("stop", {
    stopColor: "#663399",
    stopOpacity: "0"
  }), jsx("stop", {
    offset: "1"
  })), jsx("filter", {
    id: filterId,
    x: "0",
    y: "0",
    width: "100%",
    height: "100%"
  }, jsx("feComponentTransfer", null, jsx("feFuncA", {
    type: "linear",
    slope: "0.3"
  })))));
}
InProgressIcon.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "InProgressIcon"
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/icons/InProgressIcon.tsx"] = {
    name: "InProgressIcon",
    docgenInfo: InProgressIcon.__docgenInfo,
    path: "src/components/icons/InProgressIcon.tsx"
  };
}

export default InProgressIcon;
//# sourceMappingURL=InProgressIcon.esm.js.map
