{"version":3,"file":"ModalPanel.esm.js","sources":["../../../../src/components/Modal/ModalPanel.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport React from \"react\"\nimport { keyframes } from \"@emotion/core\"\nimport { ModalContent, ModalContentProps } from \"./ModalContent\"\nimport { ThemeCss } from \"../../theme\"\nimport { warn } from \"../../utils/maintenance/warn\"\n\nconst buildTranslation = (position: ModalPanelPosition) => keyframes`\n  0% {\n    transform: translate3d${position === `left` ? `(-100%, 0,0)` : `(100%,0,0)`}\n   }\n \n   100% {\n    transform: translate3d(0,0,0);\n   }\n `\n\nconst translateLeft = buildTranslation(`left`)\nconst translateRight = buildTranslation(`right`)\n\nconst baseCss: ThemeCss = theme => ({\n  background: theme.colors.white,\n  height: `100vh`,\n  position: \"absolute\",\n  animationDuration: `0.5s`,\n  animationFillMode: `forwards`,\n  animationTimingFunction: `ease`,\n})\n\nconst DEFAULT_MAX_WIDTH = `432px`\n\nconst sizesStyles: Record<PanelSize, ThemeCss> = {\n  DEFAULT: _theme => ({\n    maxWidth: `100%`,\n    [`@media (min-width: ${DEFAULT_MAX_WIDTH})`]: {\n      maxWidth: DEFAULT_MAX_WIDTH,\n    },\n  }),\n}\n\nexport type PanelPosition = \"left\" | \"right\"\nexport type ModalPanelPosition = \"left\" | \"right\"\nexport type PanelSize = \"DEFAULT\"\n\nexport type ModalPanelProps = Omit<ModalContentProps, \"ref\"> & {\n  position?: ModalPanelPosition\n  size?: PanelSize\n  // DEPRECATED, ONLY USE \"size\" INSTEAD\n  maxWidth?: string\n}\n\nexport const ModalPanel: React.FC<ModalPanelProps> = ({\n  maxWidth,\n  position = `right`,\n  size = `DEFAULT`,\n  ...props\n}) => {\n  if (maxWidth) {\n    warn(\n      `\"maxWidth\" prop has been deprecated in favour of \"size\" (set to \"DEFAULT\" if not passed)`\n    )\n  }\n\n  return (\n    <ModalContent\n      css={theme => [\n        baseCss(theme),\n        maxWidth ? { maxWidth } : sizesStyles[size](theme),\n        position === `right`\n          ? {\n              right: 0,\n              animationName: translateRight,\n            }\n          : {\n              left: 0,\n              animationName: translateLeft,\n            },\n      ]}\n      {...props}\n    />\n  )\n}\n"],"names":["buildTranslation","position","keyframes","translateLeft","translateRight","baseCss","theme","background","colors","white","height","animationDuration","animationFillMode","animationTimingFunction","DEFAULT_MAX_WIDTH","sizesStyles","DEFAULT","_theme","maxWidth","ModalPanel","size","props","warn","right","animationName","left"],"mappings":";;;;;;;;;;;;;;;;AAQA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD;AAAA,SAAkCC,SAAlC,oBAEGD,QAAQ,WAAR,gCAFH;AAAA,CAAzB;;AAUA,IAAME,aAAa,GAAGH,gBAAgB,QAAtC;AACA,IAAMI,cAAc,GAAGJ,gBAAgB,SAAvC;;AAEA,IAAMK,OAAiB,GAAG,SAApBA,OAAoB,CAAAC,KAAK;AAAA,SAAK;AAClCC,IAAAA,UAAU,EAAED,KAAK,CAACE,MAAN,CAAaC,KADS;AAElCC,IAAAA,MAAM,SAF4B;AAGlCT,IAAAA,QAAQ,EAAE,UAHwB;AAIlCU,IAAAA,iBAAiB,QAJiB;AAKlCC,IAAAA,iBAAiB,YALiB;AAMlCC,IAAAA,uBAAuB;AANW,GAAL;AAAA,CAA/B;;AASA,IAAMC,iBAAiB,UAAvB;AAEA,IAAMC,WAAwC,GAAG;AAC/CC,EAAAA,OAAO,EAAE,iBAAAC,MAAM;AAAA;AACbC,MAAAA,QAAQ;AADK,oCAEUJ,iBAFV,QAEiC;AAC5CI,MAAAA,QAAQ,EAAEJ;AADkC,KAFjC;AAAA;AADgC,CAAjD;IAoBaK,UAAqC,GAAG,SAAxCA,UAAwC,QAK/C;AAAA,MAJJD,QAII,SAJJA,QAII;AAAA,6BAHJjB,QAGI;AAAA,MAHJA,QAGI;AAAA,yBAFJmB,IAEI;AAAA,MAFJA,IAEI;AAAA,MADDC,KACC;;AACJ,MAAIH,QAAJ,EAAc;AACZI,IAAAA,IAAI,kGAAJ;AAGD;;AAED,SACE,IAAC,YAAD;AACE,IAAA,GAAG,EAAE,aAAAhB,KAAK;AAAA,aAAI,CACZD,OAAO,CAACC,KAAD,CADK,EAEZY,QAAQ,GAAG;AAAEA,QAAAA,QAAQ,EAARA;AAAF,OAAH,GAAkBH,WAAW,CAACK,IAAD,CAAX,CAAkBd,KAAlB,CAFd,EAGZL,QAAQ,YAAR,GACI;AACEsB,QAAAA,KAAK,EAAE,CADT;AAEEC,QAAAA,aAAa,EAAEpB;AAFjB,OADJ,GAKI;AACEqB,QAAAA,IAAI,EAAE,CADR;AAEED,QAAAA,aAAa,EAAErB;AAFjB,OARQ,CAAJ;AAAA;AADZ,KAcMkB,KAdN,EADF;AAkBD;;AApCCpB,EAAAA,qBAJ+B,QAAS;AAKxCmB,EAAAA,iBAJsB;AAMtBF,EAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}